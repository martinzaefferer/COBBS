% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logging.R
\name{logger}
\alias{logger}
\title{Function Evaluation Logger}
\usage{
logger(fn, id, freq = 1, logx = FALSE, envir = .GlobalEnv)
}
\arguments{
\item{fn}{the function to be monitored by the logger (an objective function, following the schema y=f(x)).}

\item{id}{an ID that will be part of the names of the variables that store the logging information}

\item{freq}{a positive integer, giving the frequency of the logging: the history of y (and possibly x) values is permanently recorded every freq evaluations. Note: the best observed value is updated in every evaluation, regardless of this value. Default: 1 (every iteration is stored by the logger).}

\item{logx}{boolean, specifying whether x values will be logged as well (default: FALSE).}

\item{envir}{the environment in which the logger variables are stored (default: .GlobalEnv)}
}
\value{
A function which takes the same arguments as fn, and returns the same values. In addition, it writes some variables to the specified environment.
}
\description{
Wraps your objective function, to Log each function evaluation during an optimization experiment.
}
\examples{
lower <- -1
upper <- 3
fun <- function(x)sqrt(abs(x-1))
require(nloptr)
lbfgs(x0=-1,
      fn = logger(fun,"mytest",1),
      lower=lower,
      upper=upper)
## see the logged minimum value:
logger.min.mytest
## plot the progress over time
plot(logger.y.mytest[,c(1,2)])
plot(logger.y.mytest[,c(1,3)])

}
